name: Semantic Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  versioning:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      issues: write

    outputs:
      next_version: ${{ steps.semantic.outputs.new_release_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: .

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: versioning
    if: ${{ needs.versioning.outputs.next_version != '' }}
    container:
      image: docker:dind
    strategy:
      matrix:
        app: [ dashboard, point-of-sale ]
        include:
          - app: dashboard
            env_file_main: ${{ vars.ENV_FILE_PRODUCTION }}
            docker_tag: ${{ vars.DOCKER_TAG_DASHBOARD }}
            dockerfile_path: "apps/dashboard/Dockerfile"
          - app: point-of-sale
            env_file_main: ${{ vars.ENV_FILE_PRODUCTION }}
            docker_tag: ${{ vars.DOCKER_TAG_POS }}
            dockerfile_path: "apps/point-of-sale/Dockerfile"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: .

      - name: Set up environment
        env:
          ENV_FILE: ${{ matrix.env_file_main }}
        run: |
          echo "${ENV_FILE}" > ./apps/${{ matrix.app }}/.env

      - name: Get Docker meta (for tags)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ vars.DOCKER_REGISTRY }}/${{ matrix.docker_tag }}
          tags: |
            ${{ needs.versioning.outputs.next_version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to SudoSOS Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.SVC_GH_SUDOSOS_USERNAME }}
          password: ${{ secrets.SVC_GH_SUDOSOS_PWD }}

      # Build and push Docker image with Buildx
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ matrix.dockerfile_path }}
