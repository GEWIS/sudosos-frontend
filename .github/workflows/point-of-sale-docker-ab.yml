name: Point of Sale - Dockerize - AB Test

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dockerize:
    runs-on: ubuntu-latest
    container:
      image: docker:dind
    steps:
      - name: upgrade git
        run: |
          apk add --update
          apk add git
          git --version 

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: .
          fetch-depth: 0
          fetch-tags: true

      - name: Set up environment - main
        env:
          ENV_FILE: ${{ vars.ENV_FILE_PRODUCTION }}
        run: |
          echo "${ENV_FILE}" > ./apps/point-of-sale/.env

      - name: Set branch name with AB suffix
        id: branch_name
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/}-AB)" >> $GITHUB_ENV

      - name: Get Docker meta (for tags)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_TAG_POS }}
          tags: ${{ env.BRANCH_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to SudoSOS Container Registry
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.SVC_GH_SUDOSOS_USERNAME }}
          password: ${{ secrets.SVC_GH_SUDOSOS_PWD }}

      # Build and push Docker image with Buildx
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64 #SudoSOS does not run on linux/arm64
          push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: "apps/point-of-sale/Dockerfile"
