@use "sass:meta";
@use "../../../themes/sudosos-light/variables_light";
@use "../../mixins";

// core
.p-button {
    display: inline-flex;
    cursor: pointer;
    user-select: none;
    align-items: center;
    vertical-align: bottom;
    text-align: center;
    overflow: hidden;
    position: relative;
}

.p-button-label {
    flex: 1 1 auto;
}

.p-button-icon-right {
    order: 1;
}

.p-button:disabled {
    cursor: default;
}

.p-button-icon-only {
    justify-content: center;
}

.p-button-icon-only .p-button-label {
    visibility: hidden;
    width: 0;
    flex: 0 0 auto;
}

.p-button-vertical {
    flex-direction: column;
}

.p-button-icon-bottom {
    order: 2;
}

.p-button-group .p-button {
    margin: 0;
}

.p-button-group .p-button:not(:last-child), .p-button-group .p-button:not(:last-child):hover {
    border-right: 0 none;
}

.p-button-group .p-button:not(:first-of-type):not(:last-of-type) {
    border-radius: 0;
}

.p-button-group .p-button:first-of-type:not(:only-of-type) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

.p-button-group .p-button:last-of-type:not(:only-of-type) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.p-button-group .p-button:focus {
    position: relative;
    z-index: 1;
}

// theme
.p-button {
    color: variables_light.$buttonTextColor;
    background: variables_light.$buttonBg;
    border: variables_light.$buttonBorder;
    padding: variables_light.$buttonPadding;
    font-size: variables_light.$fontSize;
    transition: variables_light.$formElementTransition;
    border-radius: variables_light.$borderRadius;
    outline-color: transparent;

    &:not(:disabled):hover {
        background: variables_light.$buttonHoverBg;
        color: variables_light.$buttonTextHoverColor;
        border-color: variables_light.$buttonHoverBorderColor;
    }

    &:not(:disabled):active {
        background: variables_light.$buttonActiveBg;
        color: variables_light.$buttonTextActiveColor;
        border-color: variables_light.$buttonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: variables_light.$buttonBg;
        border: variables_light.$outlinedButtonBorder;

        &:not(:disabled):hover {
            background: rgba(variables_light.$buttonBg, variables_light.$textButtonHoverBgOpacity);
            color: variables_light.$buttonBg;
            border: variables_light.$outlinedButtonBorder;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$buttonBg, variables_light.$textButtonActiveBgOpacity);
            color: variables_light.$buttonBg;
            border: variables_light.$outlinedButtonBorder;
        }

        &.p-button-plain {
            color: variables_light.$plainButtonTextColor;
            border-color: variables_light.$plainButtonTextColor;

            &:not(:disabled):hover {
                background: variables_light.$plainButtonHoverBgColor;
                color: variables_light.$plainButtonTextColor;
            }
    
            &:not(:disabled):active {
                background: variables_light.$plainButtonActiveBgColor;
                color: variables_light.$plainButtonTextColor;
            }
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: variables_light.$buttonBg;
        border-color: transparent;

        &:not(:disabled):hover {
            background: rgba(variables_light.$buttonBg, variables_light.$textButtonHoverBgOpacity);
            color: variables_light.$buttonBg;
            border-color: transparent;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$buttonBg, variables_light.$textButtonActiveBgOpacity);
            color: variables_light.$buttonBg;
            border-color: transparent;
        }

        &.p-button-plain {
            color: variables_light.$plainButtonTextColor;

            &:not(:disabled):hover {
                background: variables_light.$plainButtonHoverBgColor;
                color: variables_light.$plainButtonTextColor;
            }
    
            &:not(:disabled):active {
                background: variables_light.$plainButtonActiveBgColor;
                color: variables_light.$plainButtonTextColor;
            }
        }
    }

    &:focus-visible {
        @include mixins.focused();
    }

    .p-button-label {
        transition-duration: variables_light.$transitionDuration;
    }

    .p-button-icon-left {
         margin-right: variables_light.$inlineSpacing;
    }

    .p-button-icon-right {
        margin-left: variables_light.$inlineSpacing;
    }

    .p-button-icon-bottom {
        margin-top: variables_light.$inlineSpacing;
    }

    .p-button-icon-top {
       margin-bottom: variables_light.$inlineSpacing;
    }

    .p-badge {
        margin-left: variables_light.$inlineSpacing;
        min-width: variables_light.$fontSize;
        height: variables_light.$fontSize;
        line-height: variables_light.$fontSize;
        color: variables_light.$buttonBg;
        background-color: variables_light.$buttonTextColor;
    }

    &.p-button-raised {
        box-shadow: variables_light.$raisedButtonShadow;
    }

    &.p-button-rounded {
        border-radius: variables_light.$roundedButtonBorderRadius;
    }

    &.p-button-icon-only {
        width: variables_light.$buttonIconOnlyWidth;
        padding: variables_light.$buttonIconOnlyPadding;

        .p-button-icon-left,
        .p-button-icon-right {
            margin: 0;
        }

        &.p-button-rounded {
            border-radius: 50%;
            height: variables_light.$buttonIconOnlyWidth;
        }
    }

    &.p-button-sm {
        @include mixins.scaledFontSize(variables_light.$fontSize, variables_light.$scaleSM);
        @include mixins.scaledPadding(variables_light.$buttonPadding, variables_light.$scaleSM);

        .p-button-icon {
            @include mixins.scaledFontSize(variables_light.$primeIconFontSize, variables_light.$scaleSM);
        }
    }

    &.p-button-lg {
        @include mixins.scaledFontSize(variables_light.$fontSize, variables_light.$scaleLG);
        @include mixins.scaledPadding(variables_light.$buttonPadding, variables_light.$scaleLG);

        .p-button-icon {
            @include mixins.scaledFontSize(variables_light.$primeIconFontSize, variables_light.$scaleLG);
        }
    }

    &.p-button-loading-label-only {
        .p-button-label {
            margin-left: variables_light.$inlineSpacing;
        }

        .p-button-loading-icon {
            margin-right: 0;
        }
    }
}

.p-fluid {
    .p-button {
        width: 100%;
    }
    
    .p-button-icon-only {
        width: variables_light.$buttonIconOnlyWidth;
    }

    .p-button-group {
        display: flex;
        
        .p-button {
            flex: 1;
        }
    }
}

.p-button.p-button-secondary, .p-button-group.p-button-secondary > .p-button, .p-splitbutton.p-button-secondary > .p-button {
    color: variables_light.$secondaryButtonTextColor;
    background: variables_light.$secondaryButtonBg;
    border: variables_light.$secondaryButtonBorder;

    &:not(:disabled):hover {
        background: variables_light.$secondaryButtonHoverBg;
        color: variables_light.$secondaryButtonTextHoverColor;
        border-color: variables_light.$secondaryButtonHoverBorderColor;
    }

    &:not(:disabled):focus {
        box-shadow: variables_light.$secondaryButtonFocusShadow;
    }

    &:not(:disabled):active {
        background: variables_light.$secondaryButtonActiveBg;
        color: variables_light.$secondaryButtonTextActiveColor;
        border-color: variables_light.$secondaryButtonActiveBorderColor;
    }
    
    &.p-button-outlined {
        background-color: transparent;
        color: variables_light.$secondaryButtonBg;
        border: variables_light.$outlinedButtonBorder;

        &:not(:disabled):hover {
            background: rgba(variables_light.$secondaryButtonBg, variables_light.$textButtonHoverBgOpacity);
            color: variables_light.$secondaryButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$secondaryButtonBg, variables_light.$textButtonActiveBgOpacity);
            color: variables_light.$secondaryButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: variables_light.$secondaryButtonBg;
        border-color: transparent;

        &:not(:disabled):hover {
            background: rgba(variables_light.$secondaryButtonBg, variables_light.$textButtonHoverBgOpacity);
            border-color: transparent;
            color: variables_light.$secondaryButtonBg;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$secondaryButtonBg, variables_light.$textButtonActiveBgOpacity);
            border-color: transparent;
            color: variables_light.$secondaryButtonBg;
        }
    }
}

.p-button.p-button-info, .p-button-group.p-button-info > .p-button, .p-splitbutton.p-button-info > .p-button {
    color: variables_light.$infoButtonTextColor;
    background: variables_light.$infoButtonBg;
    border: variables_light.$infoButtonBorder;

    &:not(:disabled):hover {
        background: variables_light.$infoButtonHoverBg;
        color: variables_light.$infoButtonTextHoverColor;
        border-color: variables_light.$infoButtonHoverBorderColor;
    }

    &:not(:disabled):focus {
        box-shadow: variables_light.$infoButtonFocusShadow;
    }

    &:not(:disabled):active {
        background: variables_light.$infoButtonActiveBg;
        color: variables_light.$infoButtonTextActiveColor;
        border-color: variables_light.$infoButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: variables_light.$infoButtonBg;
        border: variables_light.$outlinedButtonBorder;

        &:not(:disabled):hover {
            background: rgba(variables_light.$infoButtonBg, variables_light.$textButtonHoverBgOpacity);
            color: variables_light.$infoButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$infoButtonBg, variables_light.$textButtonActiveBgOpacity);
            color: variables_light.$infoButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: variables_light.$infoButtonBg;
        border-color: transparent;

        &:not(:disabled):hover {
            background: rgba(variables_light.$infoButtonBg, variables_light.$textButtonHoverBgOpacity);
            border-color: transparent;
            color: variables_light.$infoButtonBg;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$infoButtonBg, variables_light.$textButtonActiveBgOpacity);
            border-color: transparent;
            color: variables_light.$infoButtonBg;
        }
    }
}

.p-button.p-button-success, .p-button-group.p-button-success > .p-button, .p-splitbutton.p-button-success > .p-button {
    color: variables_light.$successButtonTextColor;
    background: variables_light.$successButtonBg;
    border: variables_light.$successButtonBorder;

    &:not(:disabled):hover {
        background: variables_light.$successButtonHoverBg;
        color: variables_light.$successButtonTextHoverColor;
        border-color: variables_light.$successButtonHoverBorderColor;
    }

    &:not(:disabled):focus {
        box-shadow: variables_light.$successButtonFocusShadow;
    }

    &:not(:disabled):active {
        background: variables_light.$successButtonActiveBg;
        color: variables_light.$successButtonTextActiveColor;
        border-color: variables_light.$successButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: variables_light.$successButtonBg;
        border: variables_light.$outlinedButtonBorder;

        &:not(:disabled):hover {
            background: rgba(variables_light.$successButtonBg, variables_light.$textButtonHoverBgOpacity);
            color: variables_light.$successButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$successButtonBg, variables_light.$textButtonActiveBgOpacity);
            color: variables_light.$successButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: variables_light.$successButtonBg;
        border-color: transparent;

        &:not(:disabled):hover {
            background: rgba(variables_light.$successButtonBg, variables_light.$textButtonHoverBgOpacity);
            border-color: transparent;
            color: variables_light.$successButtonBg;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$successButtonBg, variables_light.$textButtonActiveBgOpacity);
            border-color: transparent;
            color: variables_light.$successButtonBg;
        }
    }
}

.p-button.p-button-warning, .p-button-group.p-button-warning > .p-button, .p-splitbutton.p-button-warning > .p-button {
    color: variables_light.$warningButtonTextColor;
    background: variables_light.$warningButtonBg;
    border: variables_light.$warningButtonBorder;
    
    &:not(:disabled):hover {
        background: variables_light.$warningButtonHoverBg;
        color: variables_light.$warningButtonTextHoverColor;
        border-color: variables_light.$warningButtonHoverBorderColor;
    }

    &:not(:disabled):focus {
        box-shadow: variables_light.$warningButtonFocusShadow;
    }

    &:not(:disabled):active {
        background: variables_light.$warningButtonActiveBg;
        color: variables_light.$warningButtonTextActiveColor;
        border-color: variables_light.$warningButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: variables_light.$warningButtonBg;
        border: variables_light.$outlinedButtonBorder;

        &:not(:disabled):hover {
            background: rgba(variables_light.$warningButtonBg, variables_light.$textButtonHoverBgOpacity);
            color: variables_light.$warningButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$warningButtonBg, variables_light.$textButtonActiveBgOpacity);
            color: variables_light.$warningButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: variables_light.$warningButtonBg;
        border-color: transparent;

        &:not(:disabled):hover {
            background: rgba(variables_light.$warningButtonBg, variables_light.$textButtonHoverBgOpacity);
            border-color: transparent;
            color: variables_light.$warningButtonBg;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$warningButtonBg, variables_light.$textButtonActiveBgOpacity);
            border-color: transparent;
            color: variables_light.$warningButtonBg;
        }
    }
}

.p-button.p-button-help, .p-button-group.p-button-help > .p-button, .p-splitbutton.p-button-help > .p-button {
    color: variables_light.$helpButtonTextColor;
    background: variables_light.$helpButtonBg;
    border: variables_light.$helpButtonBorder;

    &:not(:disabled):hover {
        background: variables_light.$helpButtonHoverBg;
        color: variables_light.$helpButtonTextHoverColor;
        border-color: variables_light.$helpButtonHoverBorderColor;
    }

    &:not(:disabled):focus {
        box-shadow: variables_light.$helpButtonFocusShadow;
    }

    &:not(:disabled):active {
        background: variables_light.$helpButtonActiveBg;
        color: variables_light.$helpButtonTextActiveColor;
        border-color: variables_light.$helpButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: variables_light.$helpButtonBg;
        border: variables_light.$outlinedButtonBorder;

        &:not(:disabled):hover {
            background: rgba(variables_light.$helpButtonBg, variables_light.$textButtonHoverBgOpacity);
            color: variables_light.$helpButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$helpButtonBg, variables_light.$textButtonActiveBgOpacity);
            color: variables_light.$helpButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: variables_light.$helpButtonBg;
        border-color: transparent;

        &:not(:disabled):hover {
            background: rgba(variables_light.$helpButtonBg, variables_light.$textButtonHoverBgOpacity);
            border-color: transparent;
            color: variables_light.$helpButtonBg;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$helpButtonBg, variables_light.$textButtonActiveBgOpacity);
            border-color: transparent;
            color: variables_light.$helpButtonBg;
        }
    }
}

.p-button.p-button-danger, .p-button-group.p-button-danger > .p-button, .p-splitbutton.p-button-danger > .p-button {
    color: variables_light.$dangerButtonTextColor;
    background: variables_light.$dangerButtonBg;
    border: variables_light.$dangerButtonBorder;

    &:not(:disabled):hover {
        background: variables_light.$dangerButtonHoverBg;
        color: variables_light.$dangerButtonTextHoverColor;
        border-color: variables_light.$dangerButtonHoverBorderColor;
    }

    &:not(:disabled):focus {
        box-shadow: variables_light.$dangerButtonFocusShadow;
    }

    &:not(:disabled):active {
        background: variables_light.$dangerButtonActiveBg;
        color: variables_light.$dangerButtonTextActiveColor;
        border-color: variables_light.$dangerButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: variables_light.$dangerButtonBg;
        border: variables_light.$outlinedButtonBorder;

        &:not(:disabled):hover {
            background: rgba(variables_light.$dangerButtonBg, variables_light.$textButtonHoverBgOpacity);
            color: variables_light.$dangerButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$dangerButtonBg, variables_light.$textButtonActiveBgOpacity);
            color: variables_light.$dangerButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: variables_light.$dangerButtonBg;
        border-color: transparent;

        &:not(:disabled):hover {
            background: rgba(variables_light.$dangerButtonBg, variables_light.$textButtonHoverBgOpacity);
            border-color: transparent;
            color: variables_light.$dangerButtonBg;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$dangerButtonBg, variables_light.$textButtonActiveBgOpacity);
            border-color: transparent;
            color: variables_light.$dangerButtonBg;
        }
    }
}

.p-button.p-button-contrast, .p-button-group.p-button-contrast > .p-button, .p-splitbutton.p-button-contrast > .p-button {
    color: variables_light.$contrastButtonTextColor;
    background: variables_light.$contrastButtonBg;
    border: variables_light.$contrastButtonBorder;

    &:not(:disabled):hover {
        background: variables_light.$contrastButtonHoverBg;
        color: variables_light.$contrastButtonTextHoverColor;
        border-color: variables_light.$contrastButtonHoverBorderColor;
    }

    &:not(:disabled):focus {
        box-shadow: variables_light.$contrastButtonFocusShadow;
    }

    &:not(:disabled):active {
        background: variables_light.$contrastButtonActiveBg;
        color: variables_light.$contrastButtonTextActiveColor;
        border-color: variables_light.$contrastButtonActiveBorderColor;
    }

    &.p-button-outlined {
        background-color: transparent;
        color: variables_light.$contrastButtonBg;
        border: variables_light.$outlinedButtonBorder;

        &:not(:disabled):hover {
            background: rgba(variables_light.$contrastButtonBg, variables_light.$textButtonHoverBgOpacity);
            color: variables_light.$contrastButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$contrastButtonBg, variables_light.$textButtonActiveBgOpacity);
            color: variables_light.$contrastButtonBg;
            border: variables_light.$outlinedButtonBorder;
        }
    }

    &.p-button-text {
        background-color: transparent;
        color: variables_light.$contrastButtonBg;
        border-color: transparent;

        &:not(:disabled):hover {
            background: rgba(variables_light.$contrastButtonBg, variables_light.$textButtonHoverBgOpacity);
            border-color: transparent;
            color: variables_light.$contrastButtonBg;
        }

        &:not(:disabled):active {
            background: rgba(variables_light.$contrastButtonBg, variables_light.$textButtonActiveBgOpacity);
            border-color: transparent;
            color: variables_light.$contrastButtonBg;
        }
    }
}


.p-button.p-button-link {
    color: variables_light.$linkButtonColor;
    background: transparent;
    border: transparent;

    &:not(:disabled):hover {
        background:  transparent;
        color: variables_light.$linkButtonHoverColor;
        border-color:  transparent;

        .p-button-label {
            text-decoration: variables_light.$linkButtonTextHoverDecoration;
        }
    }

    &:not(:disabled):focus {
        background: transparent;
        box-shadow: variables_light.$linkButtonFocusShadow;
        border-color:  transparent;
    }

    &:not(:disabled):active {
        background:  transparent;
        color: variables_light.$linkButtonColor;
        border-color:  transparent;
    }
}
